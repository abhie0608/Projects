pragma solidity 0.4.25;
contract Proof
{
 struct FileDetails
 {
 uint timestamp;
 string owner;
 }
 mapping (string => FileDetails) files;
 event logFileAddedStatus(bool status, uint timestamp, string owner,
string fileHash);
 //this is used to store the owner of file at the block timestamp
 function set(string owner, string fileHash) public
 {
 if(files[fileHash].timestamp == 0)
 {
 files[fileHash] = FileDetails(block.timestamp, owner);
 emit logFileAddedStatus(true, block.timestamp, owner, fileHash);
 }
 else
 {
emit logFileAddedStatus(false, block.timestamp, owner, fileHash);
 }
 }
 //this is used to get file information
 function get(string fileHash) public view returns (uint timestamp, string owner)
 {
 return (files[fileHash].timestamp, files[fileHash].owner);
 }
}
